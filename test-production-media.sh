#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ

echo "üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω—å"
echo "=============================================="

SERVER="http://89.116.31.189"

# –¢–µ—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ (–∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏ –∑ –≤–∞—à–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞)
declare -a files=(
    "4041.png"
    "volgnpz.jpg" 
    "1761574574725_59m3t1s5ikd.jpg"
)

echo ""
echo "üìã –¢–µ—Å—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤:"

for file in "${files[@]}"
do
    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–µ—Ä—à—ñ –¥–≤–∞ —Å–∏–º–≤–æ–ª–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø–∞–ø–æ–∫
    char1=${file:0:1}
    char2=${file:1:1}
    
    full_url="$SERVER/media/gallery/full/$char1/$char2/$file"
    
    echo -n "  $file (full): "
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ HTTP —Å—Ç–∞—Ç—É—Å
    status=$(curl -s -o /dev/null -w "%{http_code}" "$full_url")
    
    if [ "$status" -eq 200 ]; then
        echo "‚úÖ OK ($status)"
    else
        echo "‚ùå FAILED ($status)"
    fi
done

echo ""
echo "üîß –¢–µ—Å—Ç—É—î–º–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∑–º–µ–Ω—à–µ–Ω–∏—Ö —Ä–æ–∑–º—ñ—Ä—ñ–≤:"

for file in "${files[@]}"
do
    char1=${file:0:1}
    char2=${file:1:1}
    
    intxt_url="$SERVER/media/gallery/intxt/$char1/$char2/$file"
    tmb_url="$SERVER/media/gallery/tmb/$char1/$char2/$file"
    
    echo -n "  $file (intxt): "
    status=$(curl -s -o /dev/null -w "%{http_code}" "$intxt_url")
    if [ "$status" -eq 200 ]; then
        echo "‚úÖ OK ($status)"
    else
        echo "‚ùå FAILED ($status)"
    fi
    
    echo -n "  $file (tmb): "
    status=$(curl -s -o /dev/null -w "%{http_code}" "$tmb_url")
    if [ "$status" -eq 200 ]; then
        echo "‚úÖ OK ($status)"
    else
        echo "‚ùå FAILED ($status)"
    fi
    
    echo ""
done

echo "üåê –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä—è–º–æ–≥–æ API:"
echo ""

# –¢–µ—Å—Ç—É—î–º–æ API –Ω–∞–ø—Ä—è–º—É (—è–∫—â–æ nginx –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π)
api_url="http://localhost:3000/api/media/gallery"

for file in "${files[@]}"
do
    char1=${file:0:1}
    char2=${file:1:1}
    
    echo -n "  API tmb/$char1/$char2/$file: "
    status=$(curl -s -o /dev/null -w "%{http_code}" "$api_url/tmb/$char1/$char2/$file")
    if [ "$status" -eq 200 ]; then
        echo "‚úÖ OK ($status)"
    else
        echo "‚ùå FAILED ($status)"
    fi
done

echo ""
echo "üìä –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –Ω–∞ –¥–∏—Å–∫—É:"
echo ""

MEDIA_PATH="/var/media/galinfo/gallery"

for file in "${files[@]}"
do
    char1=${file:0:1}
    char2=${file:1:1}
    
    # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –¥–ª—è –∑–∂–∞—Ç–∏—Ö –≤–µ—Ä—Å—ñ–π
    base_name="${file%.*}"
    
    full_path="$MEDIA_PATH/full/$char1/$char2/$file"
    intxt_path="$MEDIA_PATH/intxt/$char1/$char2/${base_name}.jpg"
    tmb_path="$MEDIA_PATH/tmb/$char1/$char2/${base_name}.jpg"
    
    echo "  $file:"
    
    if [ -f "$full_path" ]; then
        size=$(du -h "$full_path" | cut -f1)
        echo "    Full:  ‚úÖ $size ($full_path)"
    else
        echo "    Full:  ‚ùå NOT FOUND ($full_path)"
    fi
    
    if [ -f "$intxt_path" ]; then
        size=$(du -h "$intxt_path" | cut -f1)
        echo "    Intxt: ‚úÖ $size ($intxt_path)"
    else
        echo "    Intxt: ‚è≥ NOT YET GENERATED ($intxt_path)"
    fi
    
    if [ -f "$tmb_path" ]; then
        size=$(du -h "$tmb_path" | cut -f1)
        echo "    Tmb:   ‚úÖ $size ($tmb_path)"
    else
        echo "    Tmb:   ‚è≥ NOT YET GENERATED ($tmb_path)"
    fi
    
    echo ""
done

echo "üöÄ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏—â–µ."
echo ""
echo "üí° –Ø–∫—â–æ –±–∞—á–∏—Ç–µ ‚ùå FAILED, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ:"
echo "   ‚Ä¢ –ß–∏ –∑–∞–ø—É—â–µ–Ω–∏–π Next.js —Å–µ—Ä–≤–µ—Ä (pm2 list)"
echo "   ‚Ä¢ –ß–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π nginx" 
echo "   ‚Ä¢ –ß–∏ —ñ—Å–Ω—É—é—Ç—å –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏ –≤ –ø–∞–ø—Ü—ñ full"
echo ""
echo "üí° –Ø–∫—â–æ –±–∞—á–∏—Ç–µ ‚è≥ NOT YET GENERATED:"
echo "   ‚Ä¢ –¶–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –§–∞–π–ª–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø–∏—Ç—ñ"
echo "   ‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏ URL –≤ –±—Ä–∞—É–∑–µ—Ä—ñ, —â–æ–± –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ñ–∞–π–ª"
