const mysql = require('mysql2/promise');
require('dotenv').config();

async function fixTimezoneData() {
  let connection;
  
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || '127.0.0.1',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: Number(process.env.DB_PORT || 3306),
      timezone: 'Z' // UTC timezone
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —Å–µ—Ä–≤–µ—Ä–∞
    const [serverTime] = await connection.execute('SELECT NOW() as server_time');
    console.log('üïê –ß–∞—Å —Å–µ—Ä–≤–µ—Ä–∞:', serverTime[0].server_time);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Å—ñ–≤ –∑ –Ω–æ–≤–∏–Ω
    const [newsData] = await connection.execute(`
      SELECT a_news.id, a_news.ndate, a_news.ntime, a_news_headers.nheader 
      FROM a_news 
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.lang = '1' 
      ORDER BY a_news.ndate DESC, a_news.ntime DESC 
      LIMIT 5
    `);

    console.log('\nüì∞ –û—Å—Ç–∞–Ω–Ω—ñ 5 –Ω–æ–≤–∏–Ω:');
    newsData.forEach((news, index) => {
      console.log(`${index + 1}. ID: ${news.id}, –î–∞—Ç–∞: ${news.ndate}, –ß–∞—Å: ${news.ntime}, –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${news.nheader?.substring(0, 50)}...`);
    });

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –ø—Ä–æ–±–ª–µ–º–∏ –∑ —á–∞—Å–æ–≤–∏–º–∏ –∑–æ–Ω–∞–º–∏
    console.log('\nüîç –ê–Ω–∞–ª—ñ–∑ —á–∞—Å–æ–≤–∏—Ö –∑–æ–Ω:');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —á–∞—Å –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —î UTC
    const [timezoneCheck] = await connection.execute(`
      SELECT 
        @@global.time_zone as global_timezone,
        @@session.time_zone as session_timezone,
        @@system_time_zone as system_timezone
    `);
    
    console.log('üåç –ì–ª–æ–±–∞–ª—å–Ω–∞ —á–∞—Å–æ–≤–∞ –∑–æ–Ω–∞:', timezoneCheck[0].global_timezone);
    console.log('üìÖ –°–µ—Å—ñ–π–Ω–∞ —á–∞—Å–æ–≤–∞ –∑–æ–Ω–∞:', timezoneCheck[0].session_timezone);
    console.log('‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞ —á–∞—Å–æ–≤–∞ –∑–æ–Ω–∞:', timezoneCheck[0].system_timezone);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –¥–∞–Ω—ñ
    const [problematicNews] = await connection.execute(`
      SELECT COUNT(*) as count
      FROM a_news 
      WHERE ntime IS NOT NULL 
      AND ntime != '00:00:00'
      AND HOUR(ntime) > 20
    `);

    console.log(`\n‚ö†Ô∏è –ù–æ–≤–∏–Ω –∑ —á–∞—Å–æ–º –ø—ñ—Å–ª—è 20:00: ${problematicNews[0].count}`);

    if (problematicNews[0].count > 0) {
      console.log('\nüîß –ú–æ–∂–ª–∏–≤–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ...');
      
      // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –ø—Ä–æ–±–ª–µ–º–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤
      const [examples] = await connection.execute(`
        SELECT id, ndate, ntime, nheader
        FROM a_news 
        WHERE ntime IS NOT NULL 
        AND ntime != '00:00:00'
        AND HOUR(ntime) > 20
        LIMIT 3
      `);

      console.log('\nüìã –ü—Ä–∏–∫–ª–∞–¥–∏ –ø—Ä–æ–±–ª–µ–º–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤:');
      examples.forEach((news, index) => {
        console.log(`${index + 1}. ID: ${news.id}, –î–∞—Ç–∞: ${news.ndate}, –ß–∞—Å: ${news.ntime}`);
      });
    }

    console.log('\n‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –Ø–∫—â–æ —á–∞—Å –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä.');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîí –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç
fixTimezoneData();
