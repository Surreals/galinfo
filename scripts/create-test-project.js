const mysql = require('mysql2/promise');
require('dotenv').config();

async function createTestProject() {
  let connection;
  
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfo',
      port: process.env.DB_PORT || 3306
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –Ω–æ–≤–∏–Ω—É-–ø—Ä–æ–µ–∫—Ç
    const newsQuery = `
      INSERT INTO a_news (
        images, ndate, ntime, ntype, nauthor, nauthorplus, showauthor, rubric, region, theme,
        nweight, nocomment, hiderss, approved, lang, rated, udate, urlkey, userid, layout,
        bytheme, ispopular, supervideo, printsubheader, topnews, isexpert, photo, video,
        subrubric, suggest, headlineblock, twitter_status, youcode, maininblock, isProject
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `;
    
    const currentDate = new Date();
    const ndate = currentDate.toISOString().split('T')[0];
    const ntime = currentDate.toTimeString().split(' ')[0].substring(0, 8);
    const udate = Math.floor(currentDate.getTime() / 1000);
    
    const newsValues = [
      '1,2,3', // images - —Ç–µ—Å—Ç–æ–≤—ñ ID –∑–æ–±—Ä–∞–∂–µ–Ω—å
      ndate,
      ntime,
      1, // ntype - –Ω–æ–≤–∏–Ω–∞
      1, // nauthor
      '', // nauthorplus
      1, // showauthor
      '1', // rubric
      '1', // region
      0, // theme
      0, // nweight
      0, // nocomment
      0, // hiderss
      1, // approved
      1, // lang (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞)
      1, // rated
      udate,
      'test-project', // urlkey
      1, // userid
      0, // layout
      '', // bytheme
      0, // ispopular
      0, // supervideo
      0, // printsubheader
      0, // topnews
      0, // isexpert
      1, // photo
      0, // video
      0, // subrubric
      0, // suggest
      0, // headlineblock
      'published', // twitter_status
      '', // youcode
      1, // maininblock
      1  // isProject - —Ü–µ –ø—Ä–æ–µ–∫—Ç!
    ];
    
    console.log('üìù –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –Ω–æ–≤–∏–Ω—É-–ø—Ä–æ–µ–∫—Ç...');
    const [newsResult] = await connection.execute(newsQuery, newsValues);
    const newsId = newsResult.insertId;
    
    console.log(`‚úÖ –ù–æ–≤–∏–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑ ID: ${newsId}`);
    
    // –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headersQuery = `
      INSERT INTO a_news_headers (id, nheader, nsubheader, nteaser) 
      VALUES (?, ?, ?, ?)
    `;
    
    await connection.execute(headersQuery, [
      newsId,
      '–¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–µ–∫—Ç: –†–µ–≤–æ–ª—é—Ü—ñ—è –≤ –æ–±–ª–∞—Å—Ç—ñ —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É',
      '–ù–æ–≤–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è –∑–º—ñ–Ω–∏—Ç—å –ø—ñ–¥—Ö—ñ–¥ –¥–æ –º–∞—à–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–∞–∑–∞–≤–∂–¥–∏',
      '–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å–ª—ñ–¥–Ω–∏–∫—ñ–≤ –∑—ñ –°—Ç–µ–Ω—Ñ–æ—Ä–¥—Å—å–∫–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ–π–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–µ–π—Ä–æ–Ω–Ω–∏—Ö –º–µ—Ä–µ–∂, —è–∫–∏–π –º–æ–∂–µ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ —á–∞—Å –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–∞ 90% –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Ç–æ—á–Ω–æ—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.'
    ]);
    
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–¥–∞–Ω—ñ');
    
    // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª–æ –Ω–æ–≤–∏–Ω–∏
    const bodyQuery = `
      INSERT INTO a_news_body (id, nbody) 
      VALUES (?, ?)
    `;
    
    const bodyContent = `
      <h2>–ü—Ä–æ—Ä–∏–≤ —É —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó</h2>
      <p>–ù–æ–≤–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è, —è–∫–∞ –æ—Ç—Ä–∏–º–∞–ª–∞ –Ω–∞–∑–≤—É "AdaptiveFlow", –¥–æ–∑–≤–æ–ª—è—î –Ω–µ–π—Ä–æ–Ω–Ω–∏–º –º–µ—Ä–µ–∂–∞–º —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏—Å—è –¥–æ –∑–º—ñ–Ω —É –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö –±–µ–∑ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –ø–æ–≤–Ω–æ–≥–æ –ø–µ—Ä–µ—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è. –¶–µ –≤—ñ–¥–∫—Ä–∏–≤–∞—î –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—ñ–ª—å—à –≥–Ω—É—á–∫–∏—Ö —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö —Å–∏—Å—Ç–µ–º —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É.</p>
      
      <h2>–ü—Ä–∞–∫—Ç–∏—á–Ω–µ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è</h2>
      <p>–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—è –≤–∂–µ –ø–æ–∫–∞–∑–∞–ª–∞ –≤—Ä–∞–∂–∞—é—á—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤ —Ä—ñ–∑–Ω–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö: –≤—ñ–¥ –º–µ–¥–∏—á–Ω–æ—ó –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–æ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –≤–æ–¥—ñ–Ω–Ω—è. –ö–æ–º–ø–∞–Ω—ñ—ó Google, Microsoft —Ç–∞ Tesla –≤–∏—Å–ª–æ–≤–∏–ª–∏ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ—Å—Ç—å –≤ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó AdaptiveFlow —É —Å–≤–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏.</p>
      
      <p>–î–æ—Å–ª—ñ–¥–Ω–∏–∫–∏ –ø–ª–∞–Ω—É—é—Ç—å –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–∏—Ö—ñ–¥–Ω–∏–π –∫–æ–¥ AdaptiveFlow —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∫–≤–∞—Ä—Ç–∞–ª—ñ, —â–æ –¥–æ–∑–≤–æ–ª–∏—Ç—å —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º –ø–æ –≤—Å—å–æ–º—É —Å–≤—ñ—Ç—É –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–≤–∞—Ç–∏ –∑ –Ω–æ–≤–æ—é —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—î—é —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–∞ —ó—ó –æ—Å–Ω–æ–≤—ñ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è.</p>
    `;
    
    await connection.execute(bodyQuery, [newsId, bodyContent]);
    
    console.log('‚úÖ –¢—ñ–ª–æ –Ω–æ–≤–∏–Ω–∏ –¥–æ–¥–∞–Ω–æ');
    
    // –î–æ–¥–∞—î–º–æ –º–µ—Ç–∞-–¥–∞–Ω—ñ
    const metaQuery = `
      INSERT INTO a_newsmeta (id, ntitle, ndescription, nkeywords) 
      VALUES (?, ?, ?, ?)
    `;
    
    await connection.execute(metaQuery, [
      newsId,
      '–¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–µ–∫—Ç: –†–µ–≤–æ–ª—é—Ü—ñ—è –≤ –æ–±–ª–∞—Å—Ç—ñ —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É',
      '–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å–ª—ñ–¥–Ω–∏–∫—ñ–≤ –∑—ñ –°—Ç–µ–Ω—Ñ–æ—Ä–¥—Å—å–∫–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ–π–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–µ–π—Ä–æ–Ω–Ω–∏—Ö –º–µ—Ä–µ–∂',
      '—à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç, –º–∞—à–∏–Ω–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è, –Ω–µ–π—Ä–æ–Ω–Ω—ñ –º–µ—Ä–µ–∂—ñ, AdaptiveFlow, —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó'
    ]);
    
    console.log('‚úÖ –ú–µ—Ç–∞-–¥–∞–Ω—ñ –¥–æ–¥–∞–Ω—ñ');
    
    // –î–æ–¥–∞—î–º–æ —Ç–µ–≥–∏
    const tags = ['–¢–ï–•–ù–û–õ–û–ì–Ü–á', '–Ü–ù–ù–û–í–ê–¶–Ü–á', '–®–¢–£–ß–ù–ò–ô –Ü–ù–¢–ï–õ–ï–ö–¢'];
    
    for (const tag of tags) {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–≥, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
      const tagQuery = `INSERT IGNORE INTO a_tags (tag) VALUES (?)`;
      await connection.execute(tagQuery, [tag]);
      
      // –û—Ç—Ä–∏–º—É—î–º–æ ID —Ç–µ–≥—É
      const [tagResult] = await connection.execute(`SELECT id FROM a_tags WHERE tag = ?`, [tag]);
      const tagId = tagResult[0].id;
      
      // –î–æ–¥–∞—î–º–æ –∑–≤'—è–∑–æ–∫ –Ω–æ–≤–∏–Ω–∞-—Ç–µ–≥
      const tagMapQuery = `INSERT INTO a_tags_map (newsid, tagid) VALUES (?, ?)`;
      await connection.execute(tagMapQuery, [newsId, tagId]);
    }
    
    console.log('‚úÖ –¢–µ–≥–∏ –¥–æ–¥–∞–Ω—ñ');
    
    console.log(`\nüéâ –¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–µ–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!`);
    console.log(`üì∞ ID –Ω–æ–≤–∏–Ω–∏: ${newsId}`);
    console.log(`üîó URL: http://localhost:3001/news/test-project_${newsId}`);
    console.log(`\nüìã –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É:`);
    console.log(`   - –ü–æ–∑–Ω–∞—á–∫–∞ "–ü—Ä–æ–µ–∫—Ç" —É–≤—ñ–º–∫–Ω–µ–Ω–∞`);
    console.log(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –ø—ñ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–º —Ç–∞ –ª—ñ–¥–æ–º`);
    console.log(`   - –ö–æ–Ω—Ç–µ–Ω—Ç –∑ HTML —Ä–æ–∑–º—ñ—Ç–∫–æ—é`);
    console.log(`   - –¢–µ–≥–∏: ${tags.join(', ')}`);
    console.log(`   - –¢–µ—Å—Ç–æ–≤—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: 1,2,3`);

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
      console.log('\nüîå –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç
createTestProject();
