const mysql = require('mysql2/promise');
const dotenv = require('dotenv');
const path = require('path');

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .env —Ñ–∞–π–ª
dotenv.config({ path: path.join(__dirname, '..', '.env') });
dotenv.config({ path: path.join(__dirname, '..', '.env.local') });

async function resetTemplates() {
  let connection;
  
  try {
    const dbConfig = {
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: parseInt(process.env.DB_PORT || '3306'),
    };

    console.log('üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î...');
    connection = await mysql.createConnection(dbConfig);
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ!\n');

    // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω—ñ–≤ –∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    const templateIds = process.argv.slice(2);
    
    // –Ø–∫—â–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π —Å–ø–∏—Å–æ–∫
    if (templateIds.length === 0) {
      templateIds.push(
        'category-desktop',
        'category-mobile',
        'article-desktop',
        'article-mobile'
      );
    }

    console.log('üóëÔ∏è  –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤...\n');

    for (const templateId of templateIds) {
      const [result] = await connection.execute(
        'DELETE FROM template_schemas WHERE template_id = ?',
        [templateId]
      );
      
      if (result.affectedRows > 0) {
        console.log(`‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ: ${templateId}`);
      } else {
        console.log(`‚ö†Ô∏è  –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${templateId}`);
      }
    }

    console.log('\n‚ú® –ì–æ—Ç–æ–≤–æ!');
    console.log('\nüìù –®–∞–±–ª–æ–Ω–∏ –±—É–¥—É—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –∑ –Ω–æ–≤–∏–º–∏ advertisementId');
    console.log('   –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ /admin/templates');
    console.log('\nüí° –ê–±–æ –≤–∏–∫–ª–∏—á—Ç–µ GET /api/admin/templates –¥–ª—è —ó—Ö —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

resetTemplates();

