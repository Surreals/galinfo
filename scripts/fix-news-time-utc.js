const mysql = require('mysql2/promise');
require('dotenv').config();

async function fixNewsTimeUTC() {
  let connection;
  
  try {
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || '127.0.0.1',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: Number(process.env.DB_PORT || 3306)
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

    // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –Ω–æ–≤–∏–Ω–∏
    const [newsData] = await connection.execute(`
      SELECT a_news.id, a_news.ndate, a_news.ntime, a_news_headers.nheader
      FROM a_news 
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.id = 437775
    `);

    if (newsData.length === 0) {
      console.log('‚ùå –ù–æ–≤–∏–Ω—É –∑ ID 437775 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    const news = newsData[0];
    console.log('üì∞ –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –Ω–æ–≤–∏–Ω–∏:');
    console.log(`ID: ${news.id}`);
    console.log(`–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${news.nheader}`);
    console.log(`–î–∞—Ç–∞: ${news.ndate}`);
    console.log(`–ß–∞—Å: ${news.ntime}`);

    // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å –≤ UTC (–≤—ñ–¥–Ω—ñ–º–∞—î–º–æ 3 –≥–æ–¥–∏–Ω–∏)
    const currentTime = news.ntime;
    const [hours, minutes, seconds] = currentTime.split(':');
    const totalMinutes = parseInt(hours) * 60 + parseInt(minutes);
    const utcMinutes = totalMinutes - 180; // –í—ñ–¥–Ω—ñ–º–∞—î–º–æ 3 –≥–æ–¥–∏–Ω–∏ (180 —Ö–≤–∏–ª–∏–Ω)
    
    let utcTime;
    if (utcMinutes < 0) {
      // –Ø–∫—â–æ —á–∞—Å —Å—Ç–∞—î –≤—ñ–¥'—î–º–Ω–∏–º, –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –¥–µ–Ω—å
      const newUtcMinutes = utcMinutes + 1440; // –î–æ–¥–∞—î–º–æ 24 –≥–æ–¥–∏–Ω–∏
      const newHours = Math.floor(newUtcMinutes / 60);
      const newMinutes = newUtcMinutes % 60;
      utcTime = `${newHours.toString().padStart(2, '0')}:${newMinutes.toString().padStart(2, '0')}:${seconds}`;
    } else {
      const newHours = Math.floor(utcMinutes / 60);
      const newMinutes = utcMinutes % 60;
      utcTime = `${newHours.toString().padStart(2, '0')}:${newMinutes.toString().padStart(2, '0')}:${seconds}`;
    }
    
    console.log(`\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —á–∞—Å—É:`);
    console.log(`–õ–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å: ${currentTime}`);
    console.log(`UTC —á–∞—Å: ${utcTime}`);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    await connection.execute(`
      UPDATE a_news 
      SET ntime = ? 
      WHERE id = 437775
    `, [utcTime]);
    
    console.log('‚úÖ –ß–∞—Å –Ω–æ–≤–∏–Ω–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ UTC');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const [updatedNews] = await connection.execute(`
      SELECT a_news.id, a_news.ndate, a_news.ntime, a_news_headers.nheader
      FROM a_news 
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.id = 437775
    `);

    console.log('\nüì∞ –û–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –Ω–æ–≤–∏–Ω–∏:');
    console.log(`ID: ${updatedNews[0].id}`);
    console.log(`–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${updatedNews[0].nheader}`);
    console.log(`–î–∞—Ç–∞: ${updatedNews[0].ndate}`);
    console.log(`–ß–∞—Å: ${updatedNews[0].ntime}`);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É–º–æ–≤—É API
    const [apiCheck] = await connection.execute(`
      SELECT 
        CONCAT(a_news.ndate, ' ', a_news.ntime) as news_time,
        NOW() as server_time,
        CONCAT(a_news.ndate, ' ', a_news.ntime) < NOW() as is_before_now
      FROM a_news 
      WHERE a_news.id = 437775
    `);

    console.log('\nüß™ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–º–æ–≤–∏ API:');
    console.log(`–ß–∞—Å –Ω–æ–≤–∏–Ω–∏: ${apiCheck[0].news_time}`);
    console.log(`–ß–∞—Å —Å–µ—Ä–≤–µ—Ä–∞: ${apiCheck[0].server_time}`);
    console.log(`–ß–∏ –Ω–æ–≤–∏–Ω–∞ —Ä–∞–Ω—ñ—à–µ –∑–∞—Ä–∞–∑: ${apiCheck[0].is_before_now ? '–¢–ê–ö' : '–ù–Ü'}`);

    // –¢–µ—Å—Ç—É—î–º–æ –ø–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç API
    const [apiTest] = await connection.execute(`
      SELECT 
        a_news.id, a_news.urlkey, a_news.ntype, a_news.lang, a_news.approved,
        DATE_FORMAT(a_news.ndate, '%Y-%m-%d') as ndate,
        a_news.ntime,
        a_news_headers.nheader
      FROM a_news
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.id = 437775 
        AND a_news.urlkey = 'aaaa' 
        AND a_news.ntype IN (1, 2)
        AND a_news.lang = 1
        AND a_news.approved = 1
        AND CONCAT(a_news.ndate, " ", a_news.ntime) < NOW()
    `);

    console.log(`\nüîß –†–µ–∑—É–ª—å—Ç–∞—Ç API –∑–∞–ø–∏—Ç—É: ${apiTest.length > 0 ? '–ó–ù–ê–ô–î–ï–ù–û' : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û'}`);
    
    if (apiTest.length > 0) {
      console.log('üéâ –ù–æ–≤–∏–Ω–∞ —Ç–µ–ø–µ—Ä –ø–æ–≤–∏–Ω–Ω–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ API!');
    } else {
      console.log('‚ö†Ô∏è –ù–æ–≤–∏–Ω–∞ –≤—Å–µ —â–µ –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è. –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∫–æ–≤–µ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è.');
    }

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîí –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
fixNewsTimeUTC();
