const mysql = require('mysql2/promise');
require('dotenv').config();

async function debugNewsAPI() {
  let connection;
  
  try {
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || '127.0.0.1',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: Number(process.env.DB_PORT || 3306)
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –Ω–æ–≤–∏–Ω—É –∑ —É–º–æ–≤–∞–º–∏ API
    const [newsData] = await connection.execute(`
      SELECT 
        a_news.id, 
        a_news.urlkey,
        a_news.ntype,
        a_news.lang,
        a_news.approved,
        DATE_FORMAT(a_news.ndate, '%Y-%m-%d') as ndate,
        a_news.ntime,
        a_news_headers.nheader,
        NOW() as server_time,
        CONCAT(a_news.ndate, ' ', a_news.ntime) as news_datetime,
        CONCAT(a_news.ndate, ' ', a_news.ntime) < NOW() as is_before_now
      FROM a_news
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.id = 437775
    `);

    if (newsData.length === 0) {
      console.log('‚ùå –ù–æ–≤–∏–Ω—É –∑ ID 437775 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    const news = newsData[0];
    
    console.log('üì∞ –î–∞–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –¥–ª—è API:');
    console.log(`ID: ${news.id}`);
    console.log(`URL Key: ${news.urlkey}`);
    console.log(`–¢–∏–ø: ${news.ntype}`);
    console.log(`–ú–æ–≤–∞: ${news.lang}`);
    console.log(`–°—Ö–≤–∞–ª–µ–Ω–æ: ${news.approved}`);
    console.log(`–î–∞—Ç–∞: ${news.ndate}`);
    console.log(`–ß–∞—Å: ${news.ntime}`);
    console.log(`–ó–∞–≥–æ–ª–æ–≤–æ–∫: ${news.nheader}`);
    console.log(`–ß–∞—Å —Å–µ—Ä–≤–µ—Ä–∞: ${news.server_time}`);
    console.log(`–ß–∞—Å –Ω–æ–≤–∏–Ω–∏: ${news.news_datetime}`);
    console.log(`–ß–∏ –Ω–æ–≤–∏–Ω–∞ —Ä–∞–Ω—ñ—à–µ –∑–∞—Ä–∞–∑: ${news.is_before_now}`);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ —É–º–æ–≤–∏ API
    console.log('\nüß™ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–º–æ–≤ API:');
    
    const conditions = {
      id: news.id === 437775,
      urlkey: news.urlkey === 'aaaa',
      ntype: [1, 2].includes(news.ntype), // mixed: news (1) –∞–±–æ articles (2)
      lang: news.lang === 1,
      approved: news.approved === 1,
      timeCheck: news.is_before_now === 1
    };

    console.log(`‚úÖ ID –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π: ${conditions.id}`);
    console.log(`‚úÖ URL Key –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π: ${conditions.urlkey}`);
    console.log(`‚úÖ –¢–∏–ø –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π: ${conditions.ntype}`);
    console.log(`‚úÖ –ú–æ–≤–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞: ${conditions.lang}`);
    console.log(`‚úÖ –°—Ö–≤–∞–ª–µ–Ω–æ: ${conditions.approved}`);
    console.log(`‚ùå –ß–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞: ${conditions.timeCheck}`);

    if (!conditions.timeCheck) {
      console.log('\nüîç –î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —á–∞—Å—É:');
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
      const [timeAnalysis] = await connection.execute(`
        SELECT 
          CONCAT(a_news.ndate, ' ', a_news.ntime) as news_time,
          NOW() as server_time,
          UTC_TIMESTAMP() as utc_time,
          CONCAT(a_news.ndate, ' ', a_news.ntime) < NOW() as local_comparison,
          CONCAT(a_news.ndate, ' ', a_news.ntime) < UTC_TIMESTAMP() as utc_comparison,
          TIMESTAMPDIFF(SECOND, CONCAT(a_news.ndate, ' ', a_news.ntime), NOW()) as seconds_diff
        FROM a_news 
        WHERE a_news.id = 437775
      `);
      
      const analysis = timeAnalysis[0];
      console.log(`–ß–∞—Å –Ω–æ–≤–∏–Ω–∏: ${analysis.news_time}`);
      console.log(`–õ–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å —Å–µ—Ä–≤–µ—Ä–∞: ${analysis.server_time}`);
      console.log(`UTC —á–∞—Å: ${analysis.utc_time}`);
      console.log(`–õ–æ–∫–∞–ª—å–Ω–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: ${analysis.local_comparison}`);
      console.log(`UTC –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: ${analysis.utc_comparison}`);
      console.log(`–†—ñ–∑–Ω–∏—Ü—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: ${analysis.seconds_diff}`);
      
      if (analysis.seconds_diff < 0) {
        console.log('‚ö†Ô∏è –ß–∞—Å –Ω–æ–≤–∏–Ω–∏ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É! –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ —á–∞—Å.');
      } else {
        console.log('‚úÖ –ß–∞—Å –Ω–æ–≤–∏–Ω–∏ –≤ –º–∏–Ω—É–ª–æ–º—É, –∞–ª–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é—î.');
      }
    }

    // –¢–µ—Å—Ç—É—î–º–æ –ø–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç API
    console.log('\nüîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É API:');
    const [apiTest] = await connection.execute(`
      SELECT 
        a_news.id, a_news.urlkey, a_news.ntype, a_news.lang, a_news.approved,
        DATE_FORMAT(a_news.ndate, '%Y-%m-%d') as ndate,
        a_news.ntime,
        a_news_headers.nheader
      FROM a_news
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.id = 437775 
        AND a_news.urlkey = 'aaaa' 
        AND a_news.ntype IN (1, 2)
        AND a_news.lang = 1
        AND a_news.approved = 1
        AND CONCAT(a_news.ndate, " ", a_news.ntime) < NOW()
    `);

    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç API –∑–∞–ø–∏—Ç—É: ${apiTest.length > 0 ? '–ó–ù–ê–ô–î–ï–ù–û' : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û'}`);
    
    if (apiTest.length > 0) {
      console.log('‚úÖ API –ø–æ–≤–∏–Ω–µ–Ω –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–Ω—É');
    } else {
      console.log('‚ùå API –Ω–µ –ø–æ–≤–µ—Ä–Ω–µ –Ω–æ–≤–∏–Ω—É —á–µ—Ä–µ–∑ —É–º–æ–≤–∏ WHERE');
    }

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîí –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É
debugNewsAPI();
