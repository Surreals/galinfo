const mysql = require('mysql2/promise');
require('dotenv').config();

async function testProjectFeature() {
  let connection;
  
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfo',
      port: process.env.DB_PORT || 3306
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∏ isProject
    const [columns] = await connection.execute(`
      SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE, COLUMN_DEFAULT
      FROM INFORMATION_SCHEMA.COLUMNS 
      WHERE TABLE_SCHEMA = ? AND TABLE_NAME = 'a_news' AND COLUMN_NAME = 'isProject'
    `, [process.env.DB_NAME || 'galinfo']);

    if (columns.length === 0) {
      console.log('‚ùå –ö–æ–ª–æ–Ω–∫–∞ isProject –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—ñ a_news');
      return;
    }

    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ isProject –∑–Ω–∞–π–¥–µ–Ω–∞:');
    console.log(`   –¢–∏–ø: ${columns[0].DATA_TYPE}`);
    console.log(`   Nullable: ${columns[0].IS_NULLABLE}`);
    console.log(`   Default: ${columns[0].COLUMN_DEFAULT}`);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–≤–∏–Ω –∑ –ø–æ–∑–Ω–∞—á–∫–æ—é –ø—Ä–æ–µ–∫—Ç—É
    const [projectCount] = await connection.execute(`
      SELECT COUNT(*) as count FROM a_news WHERE isProject = 1
    `);

    console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç—ñ–≤:`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–≤–∏–Ω –∑ –ø–æ–∑–Ω–∞—á–∫–æ—é "–ü—Ä–æ–µ–∫—Ç": ${projectCount[0].count}`);

    // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –Ω–æ–≤–∏–Ω –∑ –ø–æ–∑–Ω–∞—á–∫–æ—é –ø—Ä–æ–µ–∫—Ç—É
    const [projectNews] = await connection.execute(`
      SELECT a_news.id, a_news_headers.nheader, a_news.ndate, a_news.ntime, a_news.isProject
      FROM a_news 
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.isProject = 1 
      ORDER BY a_news.ndate DESC, a_news.ntime DESC 
      LIMIT 5
    `);

    if (projectNews.length > 0) {
      console.log(`\nüì∞ –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –∑ –ø–æ–∑–Ω–∞—á–∫–æ—é "–ü—Ä–æ–µ–∫—Ç":`);
      projectNews.forEach((news, index) => {
        console.log(`   ${index + 1}. ID: ${news.id} - "${news.nheader}" (${news.ndate} ${news.ntime})`);
      });
    } else {
      console.log(`\nüì∞ –ù–æ–≤–∏–Ω–∏ –∑ –ø–æ–∑–Ω–∞—á–∫–æ—é "–ü—Ä–æ–µ–∫—Ç" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ`);
    }

    // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const [totalNews] = await connection.execute(`
      SELECT COUNT(*) as count FROM a_news WHERE approved = 1
    `);

    console.log(`\nüìà –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   –í—Å—å–æ–≥–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏—Ö –Ω–æ–≤–∏–Ω: ${totalNews[0].count}`);
    console.log(`   –ü—Ä–æ–µ–∫—Ç—ñ–≤: ${projectCount[0].count}`);
    console.log(`   –ó–≤–∏—á–∞–π–Ω–∏—Ö –Ω–æ–≤–∏–Ω: ${totalNews[0].count - projectCount[0].count}`);

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
      console.log('\nüîå –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç
testProjectFeature();
