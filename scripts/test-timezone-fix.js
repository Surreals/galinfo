const mysql = require('mysql2/promise');
require('dotenv').config();

async function testTimezoneFix() {
  let connection;
  
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –ë–ï–ó timezone: 'Z'
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || '127.0.0.1',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: Number(process.env.DB_PORT || 3306)
      // –ù–ï –¥–æ–¥–∞—î–º–æ timezone: 'Z'
    });

    console.log('üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–±–µ–∑ timezone: Z)');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —Å–µ—Ä–≤–µ—Ä–∞
    const [serverTime] = await connection.execute('SELECT NOW() as server_time');
    console.log('üïê –ß–∞—Å —Å–µ—Ä–≤–µ—Ä–∞:', serverTime[0].server_time);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Å—ñ–≤ –∑ –Ω–æ–≤–∏–Ω
    const [newsData] = await connection.execute(`
      SELECT a_news.id, a_news.ndate, a_news.ntime, a_news_headers.nheader 
      FROM a_news 
      LEFT JOIN a_news_headers ON a_news.id = a_news_headers.id
      WHERE a_news.lang = '1' 
      ORDER BY a_news.ndate DESC, a_news.ntime DESC 
      LIMIT 3
    `);

    console.log('\nüì∞ –û—Å—Ç–∞–Ω–Ω—ñ 3 –Ω–æ–≤–∏–Ω–∏:');
    newsData.forEach((news, index) => {
      console.log(`${index + 1}. ID: ${news.id}, –î–∞—Ç–∞: ${news.ndate}, –ß–∞—Å: ${news.ntime}, –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${news.nheader?.substring(0, 30)}...`);
    });

    // –¢–µ—Å—Ç—É—î–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é —á–∞—Å—É
    console.log('\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó —á–∞—Å—É:');
    newsData.forEach((news, index) => {
      if (news.ndate && news.ntime) {
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –¥–∞—Ç—É –≤ ISO —Ñ–æ—Ä–º–∞—Ç
        const isoDate = news.ndate.toISOString().split('T')[0];
        const dateTimeString = `${isoDate}T${news.ntime}Z`;
        const dateObj = new Date(dateTimeString);
        
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç—É—î—Ç—å—Å—è –∑ UTC)
        const localTime = dateObj.toLocaleTimeString('uk-UA', {
          hour: '2-digit',
          minute: '2-digit'
        });
        
        console.log(`${index + 1}. –û—Ä–∏–≥—ñ–Ω–∞–ª: ${news.ntime} ‚Üí –õ–æ–∫–∞–ª—å–Ω–∏–π: ${localTime}`);
      }
    });

    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –¢–µ–ø–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä —ñ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å.');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîí –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç
testTimezoneFix();
