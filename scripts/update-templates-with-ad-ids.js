const mysql = require('mysql2/promise');
const dotenv = require('dotenv');
const path = require('path');

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .env —Ñ–∞–π–ª
dotenv.config({ path: path.join(__dirname, '..', '.env') });
dotenv.config({ path: path.join(__dirname, '..', '.env.local') });

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ —Å—Ö–µ–º–∏
const { categoryDesktopSchema, categoryMobileSchema } = require('../app/lib/categorySchema');
const { articlePageDesktopSchema, articlePageMobileSchema } = require('../app/lib/articlePageSchema');

async function updateTemplates() {
  let connection;
  
  try {
    const dbConfig = {
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'galinfodb_db',
      port: parseInt(process.env.DB_PORT || '3306'),
    };

    console.log('üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î...');
    connection = await mysql.createConnection(dbConfig);
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ!\n');

    // –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω—ñ–≤ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –Ω–æ–≤–∏–º–∏ advertisementId
    const templatesToUpdate = [
      {
        template_id: 'category-desktop',
        name: '–°—Ç–æ—Ä—ñ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–î–µ—Å–∫—Ç–æ–ø)',
        description: '–°—Ö–µ–º–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ advertisementId',
        schema: categoryDesktopSchema
      },
      {
        template_id: 'category-mobile',
        name: '–°—Ç–æ—Ä—ñ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–ú–æ–±—ñ–ª—å–Ω–∞)',
        description: '–°—Ö–µ–º–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ advertisementId',
        schema: categoryMobileSchema
      },
      {
        template_id: 'article-desktop',
        name: '–°—Ç–æ—Ä—ñ–Ω–∫–∞ —Å—Ç–∞—Ç—Ç—ñ (–î–µ—Å–∫—Ç–æ–ø)',
        description: '–°—Ö–µ–º–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–∞—Ç—Ç—ñ –∑ advertisementId',
        schema: articlePageDesktopSchema
      },
      {
        template_id: 'article-mobile',
        name: '–°—Ç–æ—Ä—ñ–Ω–∫–∞ —Å—Ç–∞—Ç—Ç—ñ (–ú–æ–±—ñ–ª—å–Ω–∞)',
        description: '–°—Ö–µ–º–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å—Ç–∞—Ç—Ç—ñ –∑ advertisementId',
        schema: articlePageMobileSchema
      }
    ];

    console.log('üìù –û–Ω–æ–≤–ª–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –∑ advertisementId...\n');

    for (const template of templatesToUpdate) {
      try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —à–∞–±–ª–æ–Ω
        const [existing] = await connection.execute(
          'SELECT id FROM template_schemas WHERE template_id = ?',
          [template.template_id]
        );

        if (existing.length > 0) {
          // –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å–Ω—É—é—á–∏–π —à–∞–±–ª–æ–Ω
          await connection.execute(
            `UPDATE template_schemas 
             SET name = ?, description = ?, schema_json = ?, updated_at = CURRENT_TIMESTAMP
             WHERE template_id = ?`,
            [
              template.name,
              template.description,
              JSON.stringify(template.schema),
              template.template_id
            ]
          );
          console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ: ${template.template_id}`);
        } else {
          // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —à–∞–±–ª–æ–Ω
          await connection.execute(
            `INSERT INTO template_schemas (template_id, name, description, schema_json)
             VALUES (?, ?, ?, ?)`,
            [
              template.template_id,
              template.name,
              template.description,
              JSON.stringify(template.schema)
            ]
          );
          console.log(`‚ûï –°—Ç–≤–æ—Ä–µ–Ω–æ: ${template.template_id}`);
        }
      } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–ª—è ${template.template_id}:`, error.message);
      }
    }

    console.log('\n‚ú® –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –®–∞–±–ª–æ–Ω–∏ —Ç–µ–ø–µ—Ä –º—ñ—Å—Ç—è—Ç—å:');
    console.log('  - advertisementId –¥–ª—è AD_BANNER –±–ª–æ–∫—ñ–≤');
    console.log('  - advertisementId –¥–ª—è BANNER_IMAGE –±–ª–æ–∫—ñ–≤');
    console.log('\nüí° –í—ñ–¥–∫—Ä–∏–π—Ç–µ /admin/templates —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –∑–º—ñ–Ω–∏');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

updateTemplates();

