import type { Metadata } from "next";
import { Open_Sans, Rubik } from "next/font/google";
import { ConfigProvider } from "antd";

import Footer from "@/app/footer/Footer";
import Header from "@/app/header/Header";
import {MobileProvider} from "@/app/contexts/MobileContext";

import "./globals.css";
import "antd/dist/reset.css";

const openSans = Open_Sans({
  variable: "--font-open-sans",
  subsets: ["latin"],
  weight: ["400", "600", "700"],
  display: "swap",
});

const rubik = Rubik({
  variable: "--font-rubik",
  subsets: ["latin", "cyrillic", "hebrew"],
  weight: ["300", "400", "500", "700"],
  display: "swap",
});

const customTheme = {
  token: {
    colorPrimary: "#c7084f",
    borderRadius: 8,
    controlHeight: 46,
  },
  components: {
    Carousel: {
      arrowSize: 14,
      dotActiveWidth: 34,
      dotGap: 5,
      colorBgContainer: "#c7084f",
      dotHeight: 12,
      dotOffset: -34,
    },
    Input: {
      activeBorderColor: "#c7084f",
      hoverBorderColor: "#c7084f",
      colorBorder: "rgb(207,207,207)",
      controlHeight: 46,
      borderRadius: 8,
    },
    Tabs: {
      itemSelectedColor: "#c7084f",
      inkBarColor: "#c7084f",
      itemActiveColor: "#c7084f",
      titleFontSize: 15,
      titleFontWeight: 600,
    },
    Upload: {
      colorPrimary: "#c7084f",
      colorPrimaryHover: "#a70641",
      colorBorder: "rgb(207,207,207)",
      borderRadiusLG: 8,
    },
    Select: {
      activeBorderColor: "#c7084f",
      hoverBorderColor: "#c7084f",
      borderRadius: 8,
      controlHeight: 46,
    },
    Checkbox: {
      colorPrimary: "#c7084f",
      colorPrimaryHover: "#a70641",
      borderRadiusSM: 4,
    },
    DatePicker: {
      activeBorderColor: "#c7084f",
      hoverBorderColor: "#c7084f",
      borderRadius: 8,
      controlHeight: 46,
      colorPrimary: "#c7084f",
    },
    Radio: {
      colorPrimary: "#c7084f",
      colorPrimaryHover: "#a70641",
      dotSize: 12,
      borderRadiusSM: 4,
    },
  },
};

export const metadata: Metadata = {
  title: "Galinfo",
  description: "Generated by create next app",
  icons: {
    icon: '/galinfo-favicon.svg',
  },
};

export default function RootLayout({
                                     children,
                                   }: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <MobileProvider>
      <html lang="en">
      <body
        className={`${openSans.variable} ${rubik.variable} antialiased`}
        suppressHydrationWarning={true}
      >
      <ConfigProvider
        theme={customTheme}
      >
        <Header/>
        {children}
        <Footer/>
      </ConfigProvider>
      </body>
      </html>
    </MobileProvider>

  );
}