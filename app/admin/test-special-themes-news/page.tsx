'use client';

import { useState } from 'react';
import { 
  useSpecialThemesNews, 
  useSpecialThemesNewsById,
  useLatestSpecialThemesNews,
  useSpecialThemesNewsWithImages,
  useAllSpecialThemesNews
} from '@/app/hooks';

export default function TestSpecialThemesNewsPage() {
  const [selectedThemeParam, setSelectedThemeParam] = useState('vidverta-rozmova-z');
  const [selectedThemeId, setSelectedThemeId] = useState(136);
  const [currentTest, setCurrentTest] = useState<'param' | 'id' | 'latest' | 'images' | 'all'>('param');

  // Test 1: Basic usage with parameter
  const {
    data: paramData,
    loading: paramLoading,
    error: paramError,
    setPage: setParamPage,
    setLimit: setParamLimit,
    goToNextPage: paramNextPage,
    goToPrevPage: paramPrevPage,
    getLatestNews: getParamLatestNews,
    getNewsWithImages: getParamNewsWithImages,
    getSpecialThemeInfo: getParamThemeInfo,
    hasNews: paramHasNews,
    getMainImage,
    hasImages
  } = useSpecialThemesNews({
    param: selectedThemeParam,
    limit: 5,
    autoFetch: currentTest === 'param'
  });

  // Test 2: Search by ID
  const {
    data: idData,
    loading: idLoading,
    error: idError,
    refetch: refetchById
  } = useSpecialThemesNewsById(selectedThemeId, {
    limit: 3,
    autoFetch: currentTest === 'id'
  });

  // Test 3: Latest news only
  const {
    data: latestData,
    loading: latestLoading,
    error: latestError
  } = useLatestSpecialThemesNews(selectedThemeParam, {
    autoFetch: currentTest === 'latest'
  });

  // Test 4: News with images
  const {
    data: imagesData,
    loading: imagesLoading,
    error: imagesError,
    newsWithImages
  } = useSpecialThemesNewsWithImages(selectedThemeParam, {
    autoFetch: currentTest === 'images'
  });

  // Test 5: All news
  const {
    data: allData,
    loading: allLoading,
    error: allError,
    goToNextPage: allNextPage,
    goToPrevPage: allPrevPage
  } = useAllSpecialThemesNews(selectedThemeParam, {
    autoFetch: currentTest === 'all'
  });

  const renderNewsItem = (newsItem: any, showImages = false) => (
    <div key={newsItem.id} style={{ 
      border: '1px solid #ddd', 
      padding: '15px', 
      margin: '10px 0',
      borderRadius: '8px'
    }}>
      <h4 style={{ color: '#0066cc', margin: '0 0 10px 0' }}>
        {newsItem.nheader}
      </h4>
      <div style={{ fontSize: '14px', color: '#666', marginBottom: '8px' }}>
        <strong>ID:</strong> {newsItem.id} | 
        <strong> –î–∞—Ç–∞:</strong> {newsItem.ndate} | 
        <strong> –ß–∞—Å:</strong> {newsItem.ntime} | 
        <strong> –í–∞–≥–∞:</strong> {newsItem.nweight}
      </div>
      {newsItem.nsubheader && (
        <div style={{ fontSize: '16px', fontWeight: 'bold', margin: '8px 0' }}>
          {newsItem.nsubheader}
        </div>
      )}
      <p style={{ color: '#333', lineHeight: '1.4' }}>{newsItem.nteaser}</p>
      
      {showImages && (
        <div style={{ marginTop: '10px' }}>
          <strong>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong> {hasImages(newsItem) ? '–¢–∞–∫' : '–ù—ñ'}
          {hasImages(newsItem) && (
            <div>
              <strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å:</strong> {newsItem.images?.length || 0}
              {getMainImage(newsItem) && (
                <div style={{ marginTop: '5px' }}>
                  <strong>–ì–æ–ª–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong> {getMainImage(newsItem)?.urls?.tmb}
                </div>
              )}
            </div>
          )}
        </div>
      )}
      
      <div style={{ fontSize: '12px', color: '#888', marginTop: '10px' }}>
        <strong>–†—É–±—Ä–∏–∫–∞:</strong> {newsItem.rubric} | 
        <strong> –ü–µ—Ä–µ–≥–ª—è–¥–∏:</strong> {newsItem.views_count} | 
        <strong> –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:</strong> {newsItem.comments_count}
      </div>
    </div>
  );

  const renderTestSection = () => {
    switch (currentTest) {
      case 'param':
        return (
          <div>
            <h2>üîç –¢–µ—Å—Ç 1: –ü–æ—à—É–∫ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º</h2>
            <div style={{ marginBottom: '20px' }}>
              <label>
                –ü–∞—Ä–∞–º–µ—Ç—Ä —Ç–µ–º–∏: 
                <input 
                  type="text" 
                  value={selectedThemeParam} 
                  onChange={(e) => setSelectedThemeParam(e.target.value)}
                  style={{ marginLeft: '10px', padding: '5px' }}
                />
              </label>
            </div>
            
            {paramLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {paramError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {paramError}</p>}
            
            {paramData && (
              <div>
                <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f0f8ff', borderRadius: '8px' }}>
                  <h3>üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–µ–º—É:</h3>
                  <p><strong>ID:</strong> {getParamThemeInfo()?.id}</p>
                  <p><strong>–ù–∞–∑–≤–∞:</strong> {getParamThemeInfo()?.title}</p>
                  <p><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä:</strong> {getParamThemeInfo()?.param}</p>
                  <p><strong>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</strong> {getParamThemeInfo()?.link}</p>
                  <p><strong>–¢–∏–ø –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:</strong> {getParamThemeInfo()?.cattype}</p>
                  <p><strong>–Ñ –Ω–æ–≤–∏–Ω–∏:</strong> {paramHasNews ? '–¢–∞–∫' : '–ù—ñ'}</p>
                  <p><strong>–û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏:</strong> {getParamLatestNews()?.nheader || '–ù–µ–º–∞—î'}</p>
                </div>

                <div style={{ marginBottom: '15px' }}>
                  <button onClick={() => setParamPage(1)} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ü–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
                  </button>
                  <button onClick={paramPrevPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    ‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è
                  </button>
                  <button onClick={paramNextPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí
                  </button>
                  <button onClick={() => setParamLimit(10)} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ü–æ–∫–∞–∑–∞—Ç–∏ 10
                  </button>
                </div>

                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f9f9f9' }}>
                  <strong>–ü–∞–≥—ñ–Ω–∞—Ü—ñ—è:</strong> –°—Ç–æ—Ä—ñ–Ω–∫–∞ {paramData.pagination.page} –∑ {paramData.pagination.totalPages} 
                  | –í—Å—å–æ–≥–æ: {paramData.pagination.total} –Ω–æ–≤–∏–Ω
                </div>

                <h3>üì∞ –ù–æ–≤–∏–Ω–∏ ({paramData.news.length}):</h3>
                {paramData.news.map(news => renderNewsItem(news, true))}
              </div>
            )}
          </div>
        );

      case 'id':
        return (
          <div>
            <h2>üÜî –¢–µ—Å—Ç 2: –ü–æ—à—É–∫ –∑–∞ ID</h2>
            <div style={{ marginBottom: '20px' }}>
              <label>
                ID —Ç–µ–º–∏: 
                <input 
                  type="number" 
                  value={selectedThemeId} 
                  onChange={(e) => setSelectedThemeId(Number(e.target.value))}
                  style={{ marginLeft: '10px', padding: '5px', width: '100px' }}
                />
              </label>
              <button onClick={refetchById} style={{ marginLeft: '10px', padding: '5px 10px' }}>
                üîÑ –û–Ω–æ–≤–∏—Ç–∏
              </button>
            </div>
            
            {idLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {idError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {idError}</p>}
            
            {idData && (
              <div>
                <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f0f8ff', borderRadius: '8px' }}>
                  <h3>üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–µ–º—É (–∑–∞ ID):</h3>
                  <p><strong>ID:</strong> {idData.specialTheme.id}</p>
                  <p><strong>–ù–∞–∑–≤–∞:</strong> {idData.specialTheme.title}</p>
                  <p><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä:</strong> {idData.specialTheme.param}</p>
                  <p><strong>–ü–æ—Å–∏–ª–∞–Ω–Ω—è:</strong> {idData.specialTheme.link}</p>
                </div>

                <h3>üì∞ –ù–æ–≤–∏–Ω–∏ –∑–∞ ID ({idData.news.length}):</h3>
                {idData.news.map(news => renderNewsItem(news))}
              </div>
            )}
          </div>
        );

      case 'latest':
        return (
          <div>
            <h2>‚ö° –¢–µ—Å—Ç 3: –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏</h2>
            {latestLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {latestError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {latestError}</p>}
            
            {latestData && (
              <div>
                <h3>üì∞ –û—Å—Ç–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω–∞:</h3>
                {latestData.news.map(news => renderNewsItem(news))}
              </div>
            )}
          </div>
        );

      case 'images':
        return (
          <div>
            <h2>üñºÔ∏è –¢–µ—Å—Ç 4: –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏</h2>
            {imagesLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {imagesError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {imagesError}</p>}
            
            {imagesData && (
              <div>
                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f0fff0', borderRadius: '8px' }}>
                  <strong>–í—Å—å–æ–≥–æ –Ω–æ–≤–∏–Ω:</strong> {imagesData.news.length}<br />
                  <strong>–ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏:</strong> {newsWithImages.length}
                </div>
                
                <h3>üì∞ –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏ ({newsWithImages.length}):</h3>
                {newsWithImages.map(news => renderNewsItem(news, true))}
              </div>
            )}
          </div>
        );

      case 'all':
        return (
          <div>
            <h2>üìö –¢–µ—Å—Ç 5: –í—Å—ñ –Ω–æ–≤–∏–Ω–∏</h2>
            {allLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {allError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {allError}</p>}
            
            {allData && (
              <div>
                <div style={{ marginBottom: '15px' }}>
                  <button onClick={allPrevPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    ‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è
                  </button>
                  <button onClick={allNextPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí
                  </button>
                </div>

                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f9f9f9' }}>
                  <strong>–ü–∞–≥—ñ–Ω–∞—Ü—ñ—è:</strong> –°—Ç–æ—Ä—ñ–Ω–∫–∞ {allData.pagination.page} –∑ {allData.pagination.totalPages} 
                  | –í—Å—å–æ–≥–æ: {allData.pagination.total} –Ω–æ–≤–∏–Ω
                </div>

                <h3>üì∞ –í—Å—ñ –Ω–æ–≤–∏–Ω–∏ ({allData.news.length}):</h3>
                {allData.news.map(news => renderNewsItem(news))}
              </div>
            )}
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1>üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è useSpecialThemesNews Hook</h1>
      
      <div style={{ marginBottom: '30px' }}>
        <h3>–í–∏–±–µ—Ä—ñ—Ç—å —Ç–µ—Å—Ç:</h3>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          <button 
            onClick={() => setCurrentTest('param')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'param' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'param' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            1. –ü–æ—à—É–∫ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
          </button>
          <button 
            onClick={() => setCurrentTest('id')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'id' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'id' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            2. –ü–æ—à—É–∫ –∑–∞ ID
          </button>
          <button 
            onClick={() => setCurrentTest('latest')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'latest' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'latest' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            3. –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏
          </button>
          <button 
            onClick={() => setCurrentTest('images')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'images' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'images' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            4. –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
          </button>
          <button 
            onClick={() => setCurrentTest('all')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'all' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'all' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            5. –í—Å—ñ –Ω–æ–≤–∏–Ω–∏
          </button>
        </div>
      </div>

      <div style={{ border: '1px solid #ddd', borderRadius: '10px', padding: '20px' }}>
        {renderTestSection()}
      </div>

      <div style={{ marginTop: '40px', padding: '20px', backgroundColor: '#f8f9fa', borderRadius: '10px' }}>
        <h3>üí° –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–¥—É:</h3>
        <pre style={{ backgroundColor: '#f1f1f1', padding: '15px', borderRadius: '5px', overflow: 'auto' }}>
{`// 1. –û—Å–Ω–æ–≤–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
const { data, loading, error } = useSpecialThemesNews({
  param: 'vidverta-rozmova-z',
  limit: 10
});

// 2. –ü–æ—à—É–∫ –∑–∞ ID
const { data } = useSpecialThemesNewsById(136, { limit: 5 });

// 3. –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏
const { data } = useLatestSpecialThemesNews('vidverta-rozmova-z');

// 4. –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
const { newsWithImages } = useSpecialThemesNewsWithImages('vidverta-rozmova-z');

// 5. –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
const { goToNextPage, goToPrevPage } = useSpecialThemesNews({
  param: 'vidverta-rozmova-z'
});

// 6. –†–æ–±–æ—Ç–∞ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
const { getMainImage, hasImages } = useSpecialThemesNews({
  param: 'vidverta-rozmova-z'
});

if (hasImages(newsItem)) {
  const mainImage = getMainImage(newsItem);
}

// 7. –î–∏–Ω–∞–º—ñ—á–Ω–∞ –∑–º—ñ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
const { setPage, setLimit, setById } = useSpecialThemesNews({
  param: '136',
  byId: true
});

setPage(2);
setLimit(20);
setById(false); // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ –Ω–∞ –ø–æ—à—É–∫ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º`}
        </pre>
      </div>
    </div>
  );
}
