'use client';

import { useState } from 'react';
import { 
  useNewsByTag, 
  useLatestNewsByTag,
  useNewsByTagWithImages,
  useVideoNewsByTag,
  useAllNewsByTag
} from '@/app/hooks';

export default function TestNewsByTagPage() {
  const [selectedTagId, setSelectedTagId] = useState(1844); // –ö–∞–±–º—ñ–Ω
  const [currentTest, setCurrentTest] = useState<'basic' | 'latest' | 'images' | 'video' | 'all'>('basic');

  // Test 1: Basic usage
  const {
    data: basicData,
    loading: basicLoading,
    error: basicError,
    setPage: setBasicPage,
    setLimit: setBasicLimit,
    goToNextPage: basicNextPage,
    goToPrevPage: basicPrevPage,
    getLatestNews: getBasicLatestNews,
    getNewsWithImages: getBasicNewsWithImages,
    getTagInfo: getBasicTagInfo,
    hasNews: basicHasNews,
    getMainImage,
    hasImages,
    getTotalNews,
    getNewsCount
  } = useNewsByTag({
    tagId: selectedTagId,
    limit: 5,
    autoFetch: currentTest === 'basic'
  });

  // Test 2: Latest news only
  const {
    data: latestData,
    loading: latestLoading,
    error: latestError
  } = useLatestNewsByTag(selectedTagId, {
    autoFetch: currentTest === 'latest'
  });

  // Test 3: News with images
  const {
    data: imagesData,
    loading: imagesLoading,
    error: imagesError,
    newsWithImages
  } = useNewsByTagWithImages(selectedTagId, {
    autoFetch: currentTest === 'images'
  });

  // Test 4: Video news
  const {
    data: videoData,
    loading: videoLoading,
    error: videoError,
    videoNews
  } = useVideoNewsByTag(selectedTagId, {
    autoFetch: currentTest === 'video'
  });

  // Test 5: All news
  const {
    data: allData,
    loading: allLoading,
    error: allError,
    goToNextPage: allNextPage,
    goToPrevPage: allPrevPage
  } = useAllNewsByTag(selectedTagId, {
    autoFetch: currentTest === 'all'
  });

  // Sample tag IDs for testing
  const sampleTags = [
    { id: 1844, name: '–ö–∞–±–º—ñ–Ω' },
    { id: 1906, name: '–∂–∏—Ç–ª–æ' },
    { id: 2434, name: '—Ñ—ñ–Ω–∞–Ω—Å–∏' },
    { id: 7277, name: '–ú—ñ–Ω—ñ—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ä–æ–∑–≤–∏—Ç–∫—É –≥—Ä–æ–º–∞–¥' }
  ];

  const renderNewsItem = (newsItem: any, showImages = false) => (
    <div key={newsItem.id} style={{ 
      border: '1px solid #ddd', 
      padding: '15px', 
      margin: '10px 0',
      borderRadius: '8px'
    }}>
      <h4 style={{ color: '#0066cc', margin: '0 0 10px 0' }}>
        {newsItem.nheader}
      </h4>
      <div style={{ fontSize: '14px', color: '#666', marginBottom: '8px' }}>
        <strong>ID:</strong> {newsItem.id} | 
        <strong> –î–∞—Ç–∞:</strong> {newsItem.ndate} | 
        <strong> –ß–∞—Å:</strong> {newsItem.ntime} | 
        <strong> –¢–∏–ø:</strong> {newsItem.ntype}
      </div>
      {newsItem.nsubheader && (
        <div style={{ fontSize: '16px', fontWeight: 'bold', margin: '8px 0' }}>
          {newsItem.nsubheader}
        </div>
      )}
      <p style={{ color: '#333', lineHeight: '1.4' }}>{newsItem.nteaser}</p>
      
      {showImages && (
        <div style={{ marginTop: '10px' }}>
          <strong>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong> {hasImages(newsItem) ? '–¢–∞–∫' : '–ù—ñ'}
          {hasImages(newsItem) && (
            <div>
              <strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å:</strong> {newsItem.images?.length || 0}
              {getMainImage(newsItem) && (
                <div style={{ marginTop: '5px' }}>
                  <strong>–ì–æ–ª–æ–≤–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong> {getMainImage(newsItem)?.urls?.tmb}
                </div>
              )}
            </div>
          )}
        </div>
      )}
      
      <div style={{ fontSize: '12px', color: '#888', marginTop: '10px' }}>
        <strong>–†—É–±—Ä–∏–∫–∞:</strong> {newsItem.rubric} | 
        <strong> –ü–µ—Ä–µ–≥–ª—è–¥–∏:</strong> {newsItem.views_count} | 
        <strong> –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:</strong> {newsItem.comments_count} |
        <strong> URL:</strong> {newsItem.urlkey}
      </div>
    </div>
  );

  const renderTestSection = () => {
    switch (currentTest) {
      case 'basic':
        return (
          <div>
            <h2>üè∑Ô∏è –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h2>
            
            {basicLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {basicError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {basicError}</p>}
            
            {basicData && (
              <div>
                <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f0f8ff', borderRadius: '8px' }}>
                  <h3>üè∑Ô∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–µ–≥:</h3>
                  <p><strong>ID:</strong> {getBasicTagInfo()?.id}</p>
                  <p><strong>–ù–∞–∑–≤–∞:</strong> {getBasicTagInfo()?.tag}</p>
                  <p><strong>–Ñ –Ω–æ–≤–∏–Ω–∏:</strong> {basicHasNews ? '–¢–∞–∫' : '–ù—ñ'}</p>
                  <p><strong>–í—Å—å–æ–≥–æ –Ω–æ–≤–∏–Ω:</strong> {getTotalNews()}</p>
                  <p><strong>–ù–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ:</strong> {getNewsCount()}</p>
                  <p><strong>–û—Å—Ç–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω–∞:</strong> {getBasicLatestNews()?.nheader || '–ù–µ–º–∞—î'}</p>
                </div>

                <div style={{ marginBottom: '15px' }}>
                  <button onClick={() => setBasicPage(1)} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ü–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
                  </button>
                  <button onClick={basicPrevPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    ‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è
                  </button>
                  <button onClick={basicNextPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí
                  </button>
                  <button onClick={() => setBasicLimit(10)} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ü–æ–∫–∞–∑–∞—Ç–∏ 10
                  </button>
                </div>

                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f9f9f9' }}>
                  <strong>–ü–∞–≥—ñ–Ω–∞—Ü—ñ—è:</strong> –°—Ç–æ—Ä—ñ–Ω–∫–∞ {basicData.pagination.page} –∑ {basicData.pagination.totalPages} 
                  | –í—Å—å–æ–≥–æ: {basicData.pagination.total} –Ω–æ–≤–∏–Ω
                </div>

                <h3>üì∞ –ù–æ–≤–∏–Ω–∏ –∑–∞ —Ç–µ–≥–æ–º ({basicData.news.length}):</h3>
                {basicData.news.map(news => renderNewsItem(news, true))}
              </div>
            )}
          </div>
        );

      case 'latest':
        return (
          <div>
            <h2>‚ö° –¢–µ—Å—Ç 2: –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏</h2>
            {latestLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {latestError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {latestError}</p>}
            
            {latestData && (
              <div>
                <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f0f8ff', borderRadius: '8px' }}>
                  <h3>üè∑Ô∏è –¢–µ–≥: {latestData.tag.tag} (ID: {latestData.tag.id})</h3>
                </div>
                <h3>üì∞ –û—Å—Ç–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω–∞:</h3>
                {latestData.news.map(news => renderNewsItem(news))}
              </div>
            )}
          </div>
        );

      case 'images':
        return (
          <div>
            <h2>üñºÔ∏è –¢–µ—Å—Ç 3: –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏</h2>
            {imagesLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {imagesError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {imagesError}</p>}
            
            {imagesData && (
              <div>
                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f0fff0', borderRadius: '8px' }}>
                  <strong>–¢–µ–≥:</strong> {imagesData.tag.tag}<br />
                  <strong>–í—Å—å–æ–≥–æ –Ω–æ–≤–∏–Ω:</strong> {imagesData.news.length}<br />
                  <strong>–ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏:</strong> {newsWithImages.length}
                </div>
                
                <h3>üì∞ –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏ ({newsWithImages.length}):</h3>
                {newsWithImages.map(news => renderNewsItem(news, true))}
              </div>
            )}
          </div>
        );

      case 'video':
        return (
          <div>
            <h2>üé• –¢–µ—Å—Ç 4: –í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏</h2>
            {videoLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {videoError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {videoError}</p>}
            
            {videoData && (
              <div>
                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#fff0f0', borderRadius: '8px' }}>
                  <strong>–¢–µ–≥:</strong> {videoData.tag.tag}<br />
                  <strong>–í—Å—å–æ–≥–æ –Ω–æ–≤–∏–Ω:</strong> {videoData.news.length}<br />
                  <strong>–í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏:</strong> {videoNews.length}
                </div>
                
                <h3>üì∞ –í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏ ({videoNews.length}):</h3>
                {videoNews.length > 0 ? (
                  videoNews.map(news => renderNewsItem(news, true))
                ) : (
                  <p style={{ textAlign: 'center', color: '#666', padding: '20px' }}>
                    üì≠ –í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏ –¥–ª—è —Ü—å–æ–≥–æ —Ç–µ–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                  </p>
                )}
              </div>
            )}
          </div>
        );

      case 'all':
        return (
          <div>
            <h2>üìö –¢–µ—Å—Ç 5: –í—Å—ñ –Ω–æ–≤–∏–Ω–∏</h2>
            {allLoading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
            {allError && <p style={{ color: 'red' }}>‚ùå –ü–æ–º–∏–ª–∫–∞: {allError}</p>}
            
            {allData && (
              <div>
                <div style={{ marginBottom: '15px' }}>
                  <button onClick={allPrevPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    ‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è
                  </button>
                  <button onClick={allNextPage} style={{ margin: '0 5px', padding: '5px 10px' }}>
                    –ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí
                  </button>
                </div>

                <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#f9f9f9' }}>
                  <strong>–¢–µ–≥:</strong> {allData.tag.tag}<br />
                  <strong>–ü–∞–≥—ñ–Ω–∞—Ü—ñ—è:</strong> –°—Ç–æ—Ä—ñ–Ω–∫–∞ {allData.pagination.page} –∑ {allData.pagination.totalPages} 
                  | –í—Å—å–æ–≥–æ: {allData.pagination.total} –Ω–æ–≤–∏–Ω
                </div>

                <h3>üì∞ –í—Å—ñ –Ω–æ–≤–∏–Ω–∏ ({allData.news.length}):</h3>
                {allData.news.map(news => renderNewsItem(news))}
              </div>
            )}
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1>üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è useNewsByTag Hook</h1>
      
      {/* Tag Selector */}
      <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px' }}>
        <h3>–í–∏–±–µ—Ä—ñ—Ç—å —Ç–µ–≥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:</h3>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '10px' }}>
          {sampleTags.map(tag => (
            <button
              key={tag.id}
              onClick={() => setSelectedTagId(tag.id)}
              style={{
                padding: '8px 12px',
                backgroundColor: selectedTagId === tag.id ? '#0066cc' : '#f0f0f0',
                color: selectedTagId === tag.id ? 'white' : 'black',
                border: 'none',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              {tag.name} (ID: {tag.id})
            </button>
          ))}
        </div>
        <div>
          <label>
            –ê–±–æ –≤–≤–µ–¥—ñ—Ç—å ID —Ç–µ–≥—É: 
            <input 
              type="number" 
              value={selectedTagId} 
              onChange={(e) => setSelectedTagId(Number(e.target.value))}
              style={{ marginLeft: '10px', padding: '5px', width: '100px' }}
            />
          </label>
        </div>
      </div>
      
      {/* Test Selector */}
      <div style={{ marginBottom: '30px' }}>
        <h3>–í–∏–±–µ—Ä—ñ—Ç—å —Ç–µ—Å—Ç:</h3>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          <button 
            onClick={() => setCurrentTest('basic')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'basic' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'basic' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            1. –ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
          </button>
          <button 
            onClick={() => setCurrentTest('latest')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'latest' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'latest' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            2. –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏
          </button>
          <button 
            onClick={() => setCurrentTest('images')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'images' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'images' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            3. –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
          </button>
          <button 
            onClick={() => setCurrentTest('video')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'video' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'video' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            4. –í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏
          </button>
          <button 
            onClick={() => setCurrentTest('all')}
            style={{ 
              padding: '10px 15px', 
              backgroundColor: currentTest === 'all' ? '#0066cc' : '#f0f0f0',
              color: currentTest === 'all' ? 'white' : 'black',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            5. –í—Å—ñ –Ω–æ–≤–∏–Ω–∏
          </button>
        </div>
      </div>

      <div style={{ border: '1px solid #ddd', borderRadius: '10px', padding: '20px' }}>
        {renderTestSection()}
      </div>

      <div style={{ marginTop: '40px', padding: '20px', backgroundColor: '#f8f9fa', borderRadius: '10px' }}>
        <h3>üí° –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–¥—É:</h3>
        <pre style={{ backgroundColor: '#f1f1f1', padding: '15px', borderRadius: '5px', overflow: 'auto' }}>
{`// 1. –û—Å–Ω–æ–≤–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
const { data, loading, error } = useNewsByTag({
  tagId: 1844, // –ö–∞–±–º—ñ–Ω
  limit: 10
});

// 2. –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –∑–∞ —Ç–µ–≥–æ–º
const { data } = useLatestNewsByTag(1844);

// 3. –ù–æ–≤–∏–Ω–∏ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
const { newsWithImages } = useNewsByTagWithImages(1844);

// 4. –í—ñ–¥–µ–æ –Ω–æ–≤–∏–Ω–∏ –∑–∞ —Ç–µ–≥–æ–º
const { videoNews } = useVideoNewsByTag(1844);

// 5. –ù–æ–≤–∏–Ω–∏ –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É –∑–∞ —Ç–µ–≥–æ–º
const { data } = useNewsByTagAndType(1844, 'video');

// 6. –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
const { goToNextPage, goToPrevPage } = useNewsByTag({
  tagId: 1844
});

// 7. –†–æ–±–æ—Ç–∞ –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
const { getMainImage, hasImages } = useNewsByTag({
  tagId: 1844
});

if (hasImages(newsItem)) {
  const mainImage = getMainImage(newsItem);
}

// 8. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
const { getTotalNews, getNewsCount, getTagInfo } = useNewsByTag({
  tagId: 1844
});

const tagInfo = getTagInfo();
const totalNews = getTotalNews();`}
        </pre>
      </div>
    </div>
  );
}
