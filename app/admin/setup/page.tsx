'use client';

import React, { useState } from 'react';
import { useRouter } from 'next/navigation';
import styles from './setup.module.css';

export default function AdminSetupPage() {
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState('');
  const [error, setError] = useState('');
  const [adminExists, setAdminExists] = useState<boolean | null>(null);
  const router = useRouter();

  const checkAdminExists = async () => {
    try {
      const response = await fetch('/api/admin/init');
      const data = await response.json();
      setAdminExists(data.adminExists);
      if (data.adminExists) {
        setMessage('Admin –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —ñ—Å–Ω—É—î. –í–∏ –º–æ–∂–µ—Ç–µ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
      }
    } catch (err) {
      setError('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }
  };

  const createAdmin = async () => {
    setIsLoading(true);
    setError('');
    setMessage('');

    try {
      const response = await fetch('/api/admin/init', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const data = await response.json();

      if (data.success) {
        setMessage(`
          –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ!
          
          –û–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ:
          –õ–æ–≥—ñ–Ω: ${data.credentials.login}
          –ü–∞—Ä–æ–ª—å: ${data.credentials.password}
          
          ‚ö†Ô∏è –û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–º—ñ–Ω—ñ—Ç—å –ø–∞—Ä–æ–ª—å –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥—É!
        `);
        setAdminExists(true);
      } else {
        setError(data.message || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      }
    } catch (err) {
      setError('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    } finally {
      setIsLoading(false);
    }
  };

  // Check admin status on component mount
  React.useEffect(() => {
    checkAdminExists();
  }, []);

  return (
    <div className={styles.setupPage}>
      <div className={styles.setupContainer}>
        <div className={styles.setupHeader}>
          <div className={styles.logo}>
            <span className={styles.logoText}>G</span>
          </div>
          <h1>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
          <p>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è GalInfo</p>
        </div>

        <div className={styles.setupContent}>
          {adminExists === null && (
            <div className={styles.loadingMessage}>
              –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...
            </div>
          )}

          {adminExists === true && (
            <div className={styles.successSection}>
              <div className={styles.successIcon}>‚úÖ</div>
              <h2>–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π</h2>
              <p>–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–∂–µ —ñ—Å–Ω—É—î –≤ —Å–∏—Å—Ç–µ–º—ñ.</p>
              <button
                onClick={() => router.push('/admin/login')}
                className={styles.loginButton}
              >
                –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –≤—Ö–æ–¥—É
              </button>
            </div>
          )}

          {adminExists === false && (
            <div className={styles.setupSection}>
              <div className={styles.infoBox}>
                <h2>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
                <p>
                  –¶–µ–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å—Ç–≤–æ—Ä–∏—Ç—å –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
                  –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –æ–±–ª—ñ–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏:
                </p>
                <div className={styles.credentialsPreview}>
                  <strong>–õ–æ–≥—ñ–Ω:</strong> admin<br />
                  <strong>–ü–∞—Ä–æ–ª—å:</strong> admin
                </div>
                <p className={styles.warning}>
                  ‚ö†Ô∏è <strong>–í–∞–∂–ª–∏–≤–æ:</strong> –û–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–º—ñ–Ω—ñ—Ç—å –ø–∞—Ä–æ–ª—å –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É!<br />
                  üí° –¢–µ–ø–µ—Ä —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–π–º–∞—î –±—É–¥—å-—è–∫–∏–π —Ç–∏–ø –ª–æ–≥—ñ–Ω–∞ (–Ω–µ —Ç—ñ–ª—å–∫–∏ email —Ñ–æ—Ä–º–∞—Ç).
                </p>
              </div>

              <button
                onClick={createAdmin}
                disabled={isLoading}
                className={styles.createButton}
              >
                {isLoading ? '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è...' : '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞'}
              </button>
            </div>
          )}

          {message && (
            <div className={styles.messageBox}>
              <pre>{message}</pre>
              {adminExists && (
                <button
                  onClick={() => router.push('/admin/login')}
                  className={styles.loginButton}
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –≤—Ö–æ–¥—É
                </button>
              )}
            </div>
          )}

          {error && (
            <div className={styles.errorBox}>
              {error}
            </div>
          )}
        </div>

        <div className={styles.setupFooter}>
          <div className={styles.helpSection}>
            <h3>–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:</h3>
            <div className={styles.helpMethods}>
              <div className={styles.method}>
                <strong>–ß–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫:</strong>
                <code>npm run setup:admin</code>
              </div>
              <div className={styles.method}>
                <strong>–ß–µ—Ä–µ–∑ Node.js —Å–∫—Ä–∏–ø—Ç:</strong>
                <code>node scripts/setup-admin.js</code>
              </div>
            </div>
          </div>
          
          <div className={styles.footerInfo}>
            <p>GalInfo Admin Setup</p>
            <small>–°–∏—Å—Ç–µ–º–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</small>
          </div>
        </div>
      </div>
    </div>
  );
}
