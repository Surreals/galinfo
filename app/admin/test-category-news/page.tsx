'use client';

import { useState, useEffect } from 'react';
import AdminNavigation from '../components/AdminNavigation';
import { NewsListByRubric } from '@/app/components';
import ProtectedAdminRoute from '@/app/components/ProtectedAdminRoute';
import styles from './test-category-news.module.css';

interface Category {
  id: string;
  title: string;
  description: string;
}

export default function AdminTestCategoryNewsPage() {
  const [selectedCategory, setSelectedCategory] = useState('1');
  const [currentPage, setCurrentPage] = useState(1);
  const [itemsPerPage, setItemsPerPage] = useState(10);
  const [showFilters, setShowFilters] = useState(true);
  const [showPagination, setShowPagination] = useState(true);
  const [testResults, setTestResults] = useState<any>(null);
  const [isTesting, setIsTesting] = useState(false);

  // Available categories for testing
  const categories: Category[] = [
    { id: '1', title: '–ì–æ–ª–æ–≤–Ω—ñ –Ω–æ–≤–∏–Ω–∏', description: '–û—Å–Ω–æ–≤–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Å–∞–π—Ç—É' },
    { id: '2', title: '–ü–æ–ª—ñ—Ç–∏–∫–∞', description: '–ü–æ–ª—ñ—Ç–∏—á–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –ø–æ–¥—ñ—ó' },
    { id: '3', title: '–ï–∫–æ–Ω–æ–º—ñ–∫–∞', description: '–ï–∫–æ–Ω–æ–º—ñ—á–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞' },
    { id: '4', title: '–°—É—Å–ø—ñ–ª—å—Å—Ç–≤–æ', description: '–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –ø–æ–¥—ñ—ó' },
    { id: '5', title: '–ö—É–ª—å—Ç—É—Ä–∞', description: '–ö—É–ª—å—Ç—É—Ä–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –∑–∞—Ö–æ–¥–∏' },
    { id: '6', title: '–°–ø–æ—Ä—Ç', description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏' },
    { id: '7', title: '–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó', description: '–¢–µ—Ö–Ω—ñ—á–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó' },
    { id: '8', title: '–ú–µ–¥–∏—Ü–∏–Ω–∞', description: '–ú–µ–¥–∏—á–Ω—ñ –Ω–æ–≤–∏–Ω–∏ —Ç–∞ –∑–¥–æ—Ä–æ–≤\'—è' },
    { id: 'all', title: '–í—Å—ñ —Ä—É–±—Ä–∏–∫–∏', description: '–ù–æ–≤–∏–Ω–∏ –∑ —É—Å—ñ—Ö —Ä—É–±—Ä–∏–∫' }
  ];

  // Test API endpoint directly
  const testCategoryNewsAPI = async () => {
    setIsTesting(true);
    try {
      const params = new URLSearchParams({
        page: currentPage.toString(),
        limit: itemsPerPage.toString(),
        lang: '1',
        approved: 'true'
      });

      const response = await fetch(`/api/news/${selectedCategory}?${params}`);
      const data = await response.json();
      
      setTestResults({
        success: response.ok,
        status: response.status,
        data: data,
        timestamp: new Date().toISOString(),
        url: `/api/news/${selectedCategory}?${params}`
      });
    } catch (error) {
      setTestResults({
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error',
        timestamp: new Date().toISOString(),
        url: `/api/news/${selectedCategory}?page=${currentPage}&limit=${itemsPerPage}`
      });
    } finally {
      setIsTesting(false);
    }
  };

  // Reset to first page when category changes
  useEffect(() => {
    setCurrentPage(1);
  }, [selectedCategory]);

  return (
    <ProtectedAdminRoute>
      <div className={styles.testCategoryNewsPage}>
        <AdminNavigation />
        
        <div className={styles.mainContent}>
        <div className={styles.header}>
          <h1>–¢–µ—Å—Ç –Ω–æ–≤–∏–Ω –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é</h1>
          <p>–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω –ø–æ categoryId –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó</p>
        </div>

        {/* Controls Section */}
        <div className={styles.controlsSection}>
          <h3>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</h3>
          
          <div className={styles.controlsGrid}>
            <div className={styles.controlGroup}>
              <label htmlFor="category-select">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</label>
              <select
                id="category-select"
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className={styles.controlSelect}
              >
                {categories.map(category => (
                  <option key={category.id} value={category.id}>
                    {category.title}
                  </option>
                ))}
              </select>
              <small className={styles.controlDescription}>
                {categories.find(c => c.id === selectedCategory)?.description}
              </small>
            </div>

            <div className={styles.controlGroup}>
              <label htmlFor="page-input">–°—Ç–æ—Ä—ñ–Ω–∫–∞:</label>
              <input
                id="page-input"
                type="number"
                value={currentPage}
                onChange={(e) => setCurrentPage(Math.max(1, parseInt(e.target.value) || 1))}
                className={styles.controlInput}
                min="1"
              />
            </div>

            <div className={styles.controlGroup}>
              <label htmlFor="limit-select">–ù–æ–≤–∏–Ω –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ:</label>
              <select
                id="limit-select"
                value={itemsPerPage}
                onChange={(e) => setItemsPerPage(parseInt(e.target.value))}
                className={styles.controlSelect}
              >
                <option value={5}>5</option>
                <option value={10}>10</option>
                <option value={20}>20</option>
                <option value={50}>50</option>
              </select>
            </div>


          </div>

          <div className={styles.controlGroup}>
            <label htmlFor="show-filters">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏:</label>
            <input
              id="show-filters"
              type="checkbox"
              checked={showFilters}
              onChange={(e) => setShowFilters(e.target.checked)}
              className={styles.controlCheckbox}
            />
          </div>

          <div className={styles.controlGroup}>
            <label htmlFor="show-pagination">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—é:</label>
            <input
              id="show-pagination"
              type="checkbox"
              checked={showPagination}
              onChange={(e) => setShowPagination(e.target.checked)}
              className={styles.controlCheckbox}
            />
          </div>

          <div className={styles.testButtonContainer}>
            <button
              onClick={testCategoryNewsAPI}
              disabled={isTesting}
              className={styles.testButton}
            >
              {isTesting ? '–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è...' : '–¢–µ—Å—Ç—É–≤–∞—Ç–∏ API'}
            </button>
          </div>
        </div>

        {/* API Test Results */}
        {testResults && (
          <div className={styles.testResultsSection}>
            <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è API</h3>
            <div className={`${styles.resultCard} ${testResults.success ? styles.success : styles.error}`}>
              <div className={styles.resultHeader}>
                <span className={styles.resultStatus}>
                  {testResults.success ? '‚úÖ –£—Å–ø—ñ—à–Ω–æ' : '‚ùå –ü–æ–º–∏–ª–∫–∞'}
                </span>
                <span className={styles.resultTimestamp}>
                  {new Date(testResults.timestamp).toLocaleString()}
                </span>
              </div>
              
              <div className={styles.resultDetails}>
                <div className={styles.resultUrl}>
                  <strong>URL:</strong> <code>{testResults.url}</code>
                </div>
                
                {testResults.status && (
                  <div className={styles.resultStatus}>
                    <strong>HTTP Status:</strong> {testResults.status}
                  </div>
                )}
                
                {testResults.error && (
                  <div className={styles.resultError}>
                    <strong>–ü–æ–º–∏–ª–∫–∞:</strong> {testResults.error}
                  </div>
                )}
                
                {testResults.data && (
                  <div className={styles.resultData}>
                    <strong>–î–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:</strong>
                    <pre className={styles.jsonData}>
                      {JSON.stringify(testResults.data, null, 2)}
                    </pre>
                  </div>
                )}
              </div>
            </div>
          </div>
        )}

        {/* News List Component */}
        <div className={styles.newsListSection}>
          <h3>–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫—É –Ω–æ–≤–∏–Ω</h3>
          <div className={styles.newsListWrapper}>
            <NewsListByRubric 
              rubric={selectedCategory}
              initialPage={currentPage}
              initialLimit={itemsPerPage}
              showFilters={showFilters}
              showPagination={showPagination}
            />
          </div>
        </div>

        {/* Instructions */}
        <div className={styles.instructionsSection}>
          <h3>–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è</h3>
          <div className={styles.instructionsGrid}>
            <div className={styles.instructionCard}>
              <h4>üéØ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API</h4>
              <ul>
                <li>–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</li>
                <li>–ù–∞–ª–∞—à—Ç—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó</li>
                <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–¢–µ—Å—Ç—É–≤–∞—Ç–∏ API" –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è</li>
                <li>–ü–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–∞ —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ</li>
              </ul>
            </div>

            <div className={styles.instructionCard}>
              <h4>üì∞ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–æ–≤–∏–Ω</h4>
              <ul>
                <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤</li>
                <li>–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –ø–æ —Ç–∏–ø—É –Ω–æ–≤–∏–Ω —Ç–∞ –º–æ–≤—ñ</li>
                <li>–ù–∞–≤—ñ–≥–∞—Ü—ñ—è –ø–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö</li>
                <li>–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–ø–µ—Ä–µ–≥–ª—è–¥–∏, –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ)</li>
              </ul>
            </div>

                         <div className={styles.instructionCard}>
               <h4>üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h4>
               <ul>
                 <li>–í–∫–ª—é—á–µ–Ω–Ω—è/–≤–∏–∫–ª—é—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤</li>
                 <li>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó</li>
                 <li>–ì–Ω—É—á–∫—ñ—Å—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤</li>
                 <li>–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API endpoints</li>
               </ul>
             </div>

            <div className={styles.instructionCard}>
              <h4>üìä API Endpoints</h4>
              <ul>
                <li><code>/api/news/[categoryId]</code> - –Ω–æ–≤–∏–Ω–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</li>
                <li>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤: page, limit, type, lang, approved</li>
                <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—è —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è</li>
                <li>–û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
    </ProtectedAdminRoute>
  );
}
