'use client';

import { useState } from 'react';
import AdminNavigation from '../../components/AdminNavigation';
import styles from './rubrics.module.css';

interface Rubric {
  id: number;
  name: string;
  nameEn: string;
  visible: boolean;
  order: number;
}

export default function RubricsPage() {
  const [rubrics, setRubrics] = useState<Rubric[]>([
    { id: 4, name: '–°—É—Å–ø—ñ–ª—å—Å—Ç–≤–æ', nameEn: 'Society', visible: true, order: 1 },
    { id: 2, name: '–ü–æ–ª—ñ—Ç–∏–∫–∞', nameEn: 'Politics', visible: true, order: 2 },
    { id: 3, name: '–ï–∫–æ–Ω–æ–º—ñ–∫–∞', nameEn: 'Economy', visible: true, order: 3 },
    { id: 9, name: '–°—Ç–∞—Ç—Ç—ñ', nameEn: 'Articles', visible: true, order: 4 },
    { id: 5, name: '–ö—É–ª—å—Ç—É—Ä–∞', nameEn: 'Culture', visible: true, order: 5 },
    { id: 11, name: '–Ü–Ω—Ç–µ—Ä–≤\'—é', nameEn: 'Interview', visible: true, order: 6 },
    { id: 101, name: '–ó–¥–æ—Ä–æ–≤\'—è', nameEn: 'Health', visible: true, order: 7 },
    { id: 109, name: '–í—ñ–π–Ω–∞ –∑ –†–æ—Å—ñ—î—é', nameEn: 'War with Russia', visible: true, order: 8 },
    { id: 103, name: '–°–ø–æ—Ä—Ç', nameEn: 'Sport', visible: true, order: 9 },
    { id: 100, name: '–ö—Ä–∏–º—ñ–Ω–∞–ª', nameEn: 'Crime', visible: true, order: 10 },
    { id: 106, name: '–ù–∞–¥–∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–¥—ñ—ó', nameEn: 'Emergency Events', visible: true, order: 11 },
  ]);

  const [language, setLanguage] = useState('–£–ö–†');

  const moveUp = (id: number) => {
    setRubrics(prev => {
      const newRubrics = [...prev];
      const index = newRubrics.findIndex(r => r.id === id);
      if (index > 0) {
        [newRubrics[index], newRubrics[index - 1]] = [newRubrics[index - 1], newRubrics[index]];
        newRubrics[index].order = index + 1;
        newRubrics[index - 1].order = index;
      }
      return newRubrics;
    });
  };

  const moveDown = (id: number) => {
    setRubrics(prev => {
      const newRubrics = [...prev];
      const index = newRubrics.findIndex(r => r.id === id);
      if (index < newRubrics.length - 1) {
        [newRubrics[index], newRubrics[index + 1]] = [newRubrics[index + 1], newRubrics[index]];
        newRubrics[index].order = index + 1;
        newRubrics[index + 1].order = index + 2;
      }
      return newRubrics;
    });
  };

  const toggleVisibility = (id: number) => {
    setRubrics(prev => 
      prev.map(r => r.id === id ? { ...r, visible: !r.visible } : r)
    );
  };

  const deleteRubric = (id: number) => {
    if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é —Ä—É–±—Ä–∏–∫—É?')) {
      setRubrics(prev => prev.filter(r => r.id !== id));
    }
  };

  const addRubric = () => {
    const name = prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –Ω–æ–≤–æ—ó —Ä—É–±—Ä–∏–∫–∏:');
    if (name) {
      const newId = Math.max(...rubrics.map(r => r.id)) + 1;
      const newRubric: Rubric = {
        id: newId,
        name,
        nameEn: name,
        visible: true,
        order: rubrics.length + 1,
      };
      setRubrics(prev => [...prev, newRubric]);
    }
  };

  return (
    <div className={styles.rubricsPage}>
      <AdminNavigation />
      
      <div className={styles.mainContent}>
        <div className={styles.header}>
          <h1>–†—É–±—Ä–∏–∫–∏</h1>
          <div className={styles.languageSelector}>
            <select 
              value={language} 
              onChange={(e) => setLanguage(e.target.value)}
              className={styles.languageSelect}
            >
              <option value="–£–ö–†">–£–ö–†</option>
              <option value="ENG">ENG</option>
            </select>
          </div>
        </div>

        <div className={styles.actions}>
          <button onClick={addRubric} className={styles.addButton}>
            <span className={styles.plusIcon}>+</span>
          </button>
          <div className={styles.bulkActions}>
            <button className={styles.bulkAction}>?</button>
            <button className={styles.bulkAction}>?</button>
            <button className={styles.bulkAction}>?</button>
            <button className={styles.bulkAction}>?</button>
            <button className={styles.bulkAction}>?</button>
            <button className={styles.bulkAction}>?</button>
          </div>
        </div>

        <div className={styles.tableContainer}>
          <table className={styles.rubricsTable}>
            <thead>
              <tr>
                <th className={styles.nameColumn}>–ù–∞–∑–≤–∞</th>
                <th className={styles.operationsColumn}>–û–ø–µ—Ä–∞—Ü—ñ—ó</th>
              </tr>
            </thead>
            <tbody>
              {rubrics.map((rubric) => (
                <tr key={rubric.id} className={styles.tableRow}>
                  <td className={styles.nameCell}>
                    <span className={styles.rubricName}>
                      {language === '–£–ö–†' ? rubric.name : rubric.nameEn}
                    </span>
                    <span className={styles.rubricId}> ID: {rubric.id}</span>
                  </td>
                  <td className={styles.operationsCell}>
                    <div className={styles.operationButtons}>
                      <button
                        onClick={() => moveUp(rubric.id)}
                        className={styles.operationButton}
                        title="–ü–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –≤–≥–æ—Ä—É"
                      >
                        ‚Üë
                      </button>
                      <button
                        onClick={() => moveDown(rubric.id)}
                        className={styles.operationButton}
                        title="–ü–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –≤–Ω–∏–∑"
                      >
                        ‚Üì
                      </button>
                      <button
                        className={styles.operationButton}
                        title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏"
                      >
                        ‚úèÔ∏è
                      </button>
                      <button
                        onClick={() => toggleVisibility(rubric.id)}
                        className={`${styles.operationButton} ${styles.visibilityButton} ${rubric.visible ? styles.visible : styles.hidden}`}
                        title={rubric.visible ? '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏' : '–ü–æ–∫–∞–∑–∞—Ç–∏'}
                      >
                        üëÅÔ∏è
                      </button>
                      <button
                        onClick={() => deleteRubric(rubric.id)}
                        className={`${styles.operationButton} ${styles.deleteButton}`}
                        title="–í–∏–¥–∞–ª–∏—Ç–∏"
                      >
                        ‚úï
                      </button>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
